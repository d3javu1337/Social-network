version: '3.9'

networks:
  application:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450

volumes:
  pg_data:

services:

  backend:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '127.0.0.1:8080:8080'
    environment:
      SPRING_DATASOURCE_URL: 'jdbc:postgresql://database:5432/db'
      APP_IMAGE_BUCKET: images_service
      APP_REPORT_GENERATOR_HOST: report_service
      APP_REPORT_GENERATOR_PORT: 5488
      APP_REPORT_GENERATOR_ROUTE: '/api/v1/generator/generate'
      APP_IMAGE_BUCKET_SOURCE: images_service
      APP_IMAGE_BUCKET_PORT: 8888
      APP_IMAGE_BUCKET_LOCAL: false
      SPRING_KAFKA_PRODUCER_BOOTSTRAP-SERVERS: 'broker-1:9092,broker-2:9092,broker-3:9092'
    networks:
      - application
    deploy:
      resources:
        limits:
          memory: 1000MB
        reservations:
          memory: 1000MB
    depends_on:
      - report_service
      - images_service
      - db
      - broker-1
      - broker-2
      - broker-3
      - controller-1
      - controller-2
      - controller-3

  report_service:
    restart: always
    build:
      context: ./reportservice
      dockerfile: Dockerfile
    hostname: report_service
    environment:
      BROKERS: 'broker-1:9092,broker-2:9092,broker-3:9092'
    networks:
      - application
    depends_on:
      - broker-1
      - broker-2
      - broker-3

  images_service:
    image: nginx:stable-alpine3.20-perl
    restart: always
    expose:
      - 8888
    volumes:
      - ./images/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./images/postimages:/etc/nginx/postimages
      - ./images/profileimages:/etc/nginx/profileimages
    hostname: images_service
    networks:
      - application
    depends_on:
      - broker-1
      - controller-1

  db:
    image: postgres:16.3-alpine
    restart: always
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    expose:
      - 5432
    ports:
      - '5433:5432'
    volumes:
      - ./src/main/resources/sql/create.sql:/docker-entrypoint-initdb.d/001.sql
      - ./src/main/resources/sql/insert.sql:/docker-entrypoint-initdb.d/002.sql
      - pg_data:/var/lib/postgresql/data
    hostname: database
    networks:
      - application
    deploy:
      resources:
        limits:
          memory: 500MB
        reservations:
          memory: 500MB

  controller-1:
    image: apache/kafka:latest
    container_name: controller-1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - application

  controller-2:
      image: apache/kafka:latest
      container_name: controller-2
      environment:
        KAFKA_NODE_ID: 2
        KAFKA_PROCESS_ROLES: controller
        KAFKA_LISTENERS: CONTROLLER://:9093
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      networks:
        - application

  controller-3:
      image: apache/kafka:latest
      container_name: controller-3
      environment:
        KAFKA_NODE_ID: 3
        KAFKA_PROCESS_ROLES: controller
        KAFKA_LISTENERS: CONTROLLER://:9093
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      networks:
        - application

  broker-1:
      image: apache/kafka:latest
      container_name: broker-1
      hostname: broker-1
      expose:
        - 9092
      environment:
        KAFKA_NODE_ID: 4
        KAFKA_PROCESS_ROLES: broker
        KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
        KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-1:9092,PLAINTEXT_HOST://broker-1:9092'
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        AUTO_CREATE_TOPICS_ENABLE: true
      depends_on:
        - controller-1
        - controller-2
        - controller-3
      networks:
        - application

  broker-2:
      image: apache/kafka:latest
      container_name: broker-2
      expose:
        - 9092
      environment:
        KAFKA_NODE_ID: 5
        KAFKA_PROCESS_ROLES: broker
        KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
        KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-2:9092,PLAINTEXT_HOST://broker-2:9092'
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        AUTO_CREATE_TOPICS_ENABLE: true
      depends_on:
        - controller-1
        - controller-2
        - controller-3
      networks:
        - application

  broker-3:
      image: apache/kafka:latest
      container_name: broker-3
      expose:
        - 9092
      environment:
        KAFKA_NODE_ID: 6
        KAFKA_PROCESS_ROLES: broker
        KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
        KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-3:9092,PLAINTEXT_HOST://broker-3:9092'
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        AUTO_CREATE_TOPICS_ENABLE: true
      depends_on:
        - controller-1
        - controller-2
        - controller-3
      networks:
        - application
