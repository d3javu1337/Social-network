version: '3.9'

networks:
  application:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450

volumes:
  pg_data:

services:

  backend:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '127.0.0.1:8080:8080'
    environment:
      SPRING_DATASOURCE_URL: 'jdbc:postgresql://database:5432/db'
      APP_IMAGE_BUCKET: images_service
      APP_REPORT_GENERATOR_HOST: report_service
      APP_REPORT_GENERATOR_PORT: 5488
      APP_REPORT_GENERATOR_ROUTE: '/api/v1/generator/generate'
      APP_IMAGE_BUCKET_SOURCE: images_service
      APP_IMAGE_BUCKET_PORT: 8888
      APP_IMAGE_BUCKET_LOCAL: false
    networks:
      - application
    deploy:
      resources:
        limits:
          memory: 1000MB
        reservations:
          memory: 1000MB
    depends_on:
      - report_service
      - images_service
      - db

  report_service:
    restart: always
    build:
      context: ./reportservice
      dockerfile: Dockerfile
    hostname: report_service
    networks:
      - application

  images_service:
    image: nginx:stable-alpine3.20-perl
    restart: always
    expose:
      - 8888
    volumes:
      - ./images/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./images/postimages:/etc/nginx/postimages
      - ./images/profileimages:/etc/nginx/profileimages
    hostname: images_service
    networks:
      - application

  db:
    image: postgres:16.3-alpine
    restart: always
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    expose:
      - 5432
    volumes:
      - ./src/main/resources/sql/create.sql:/docker-entrypoint-initdb.d/001.sql
      - ./src/main/resources/sql/insert.sql:/docker-entrypoint-initdb.d/002.sql
      - pg_data:/var/lib/postgresql/data
    hostname: database
    networks:
      - application
    deploy:
      resources:
        limits:
          memory: 500MB
        reservations:
          memory: 500MB